plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.13'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'org.tattour'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // JPA & Database
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    runtimeOnly 'com.mysql:mysql-connector-j'


    implementation "com.querydsl:querydsl-jpa:5.0.0"
    implementation "com.querydsl:querydsl-apt:5.0.0"
    annotationProcessor(
            "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties["querydsl.version"]}:jpa",
            "javax.persistence:javax.persistence-api",
            "javax.annotation:javax.annotation-api")

    // Health Check
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // log back
    implementation 'ch.qos.logback:logback-classic'
    implementation 'ch.qos.logback:logback-core'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

    // S3
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.112'

    // model struct
    implementation 'org.mapstruct:mapstruct:1.5.4.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.4.Final'

    // kakao oauth
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.7'

    // Discord bot
    implementation 'net.dv8tion:JDA:5.0.0-beta.5'

    // Mustache
    implementation 'org.springframework.boot:spring-boot-starter-mustache'
}

tasks.named('test') {
    useJUnitPlatform()
}

def queryDslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += [queryDslDir]
}
tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(queryDslDir)
}

clean.doLast {
    file(queryDslDir).deleteDir()
}